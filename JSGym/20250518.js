/*
========================================
問題: 信号機に応じて進むか止まるかの関数を作りましょう！
出典: https://jsgym.shiftb.dev/q/vrNlfoyCu8
========================================
*/

// ✅ 自分の解答
// ① 信号の色を表す定数の定義
const color = '赤';

// ② 色に応じて進むか止まるかを決定する関数の定義
// ここに関数を作成してください
function clossWorkChecker(color) {
  if (color === '赤') {
    return '止まれ';
  }

  if (color === '青') {
    return '進め';
  }

  return;
}

// ③ 作った関数の実行と結果確認
// ここに関数の実行コードを書いてください
console.log(clossWorkChecker('赤'));

/*
----------------------------------------
📝 学んだこと:
- functionは使用せず、constを使って関数を宣言すること
- アロー関数を基本的に使用すること
- ifではなく三項演算子を使った方が簡潔なコードになること

❓ 疑問:
- アロー関数を使用しない方がいい場面はあるのか
----------------------------------------
*/

/*
========================================
問題: 配列内の最小値を見つける関数
出典: https://jsgym.shiftb.dev/q/mnu9odNZ_Z
========================================
*/

// ✅ 自分の解答
// ①元となる配列を定義します。
const numbers = [3, 1, 4, 1, 5];

// ②配列の中から最小の数値を見つける関数を定義してください。
const findMinimum = (array) => Math.min(...array);

// ③関数を実行して結果をconsole.logで表示しましょう。
console.log(findMinimum(numbers));

/*
----------------------------------------
📝 学んだこと:
- いきなりFor文で何とか使用とするのではなく、既に使用できる関数がないか調べることが重要
- Math.min()で引数にはカンマ区切りの数値を設定することができる
- スプレッド構文を使うことで、配列の値をカンマ区切りとしてバラバラにすることができる
----------------------------------------
*/


/*
========================================
問題: 文字列が数値を含んでいるかチェックする関数を作ってみよう！
出典: https://jsgym.shiftb.dev/q/8UdBvazjPZ
========================================
*/

// ✅ 自分の解答
// 引数となる定数の定義
const str = "hello123";

// 文字列内に数値が存在するか判定する関数の定義をしてみよう
// ここに関数定義のコードを書いてね✨
const isIncludeNum = (str) => /[0-9]/.test(str);

// 関数の実行
// ここで関数を実行して、結果をconsole.logで表示してみるよ🌟
console.log(isIncludeNum(str));

/*
----------------------------------------
📝 学んだこと:
- 最初、文字を1文字ずつチェックしようとしてしまったので、
  文字をチェックする場合は、まず正規表現が使えないかを考えるようにする
- 正規表現は'/ /'で囲って表現する
- '0~9'に該当するかどうかは'[0-9]'として表現できるし、
  '\d'でも同じ意味になる
- test()を使って正規表現でチェックした結果をはboolean型で取得できる
----------------------------------------
*/
