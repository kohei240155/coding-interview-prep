/*
================================================================================
問題: 🔥筋肉チェック！！配列内のすべての要素が同じか検証だ💪
出典: https://jsgym.shiftb.dev/q/2uPpImPHDs
結果: 正解
================================================================================
*/

// ✅ 自分の解答
// ここに配列の定義を書こう
const array = ["筋肉", "筋肉", "筋肉"];

// すべての要素が同じか検証する関数の定義だ！
// ここに関数を定義しろ！
const checkValues = (array) => {

  const targetValue = array[0];
  let isSame = true;

  array.forEach((item) => {
    if (item !== targetValue) {
      isSame = false;
    }
  })

  if (!isSame) {
    return false;
  }
    return true;
}

// 筋肉チェック🔥 関数を実行し結果をconsole.logで表示しよう
// ここに関数の実行とconsole.logを書け！
console.log(checkValues(array));

// 📘 模範解答
// const isUniform = array => array.every(item => item === array[0]);
// const array = ["筋肉", "筋肉", "筋肉"];
// console.log(isUniform(array)); // true

/*
--------------------------------------------------------------------------------
📝 学んだこと:
- 単純な配列の繰り返し処理を行いたい場合はarray.ForEachを使用できる
- forEachの引数に渡す関数はコールバック関数と呼ぶ
- コールバック関数内でreturnを記述しても全体の繰り返しは止まらないので注意する
- array.every()は配列の要素が全て条件を満たす場合にtrueを返す
--------------------------------------------------------------------------------
*/

/*
================================================================================
問題: 配列から指定した位置の要素を取り出そう！
出典: https://jsgym.shiftb.dev/q/S5-iScYDYT
結果: 正解
================================================================================
*/

// ✅ 自分の解答
// ① 引数となる配列と位置の定義
const numbers = [10, 20, 30, 40, 50];
const position = 2;

// ② 指定した位置の要素を取り出す関数の定義
// ここに関数定義のコードを書いてね
const getValue = (numbers, position) => {
  return numbers[position];
}

// ③ 関数の実行
// ここに関数を実行してconsole.logで結果を表示しちゃおう
console.log(getValue(numbers, position))

// 📘 模範解答
// const pickElement = (arr, index) => arr[index];

// const numbers = [10, 20, 30, 40, 50];
// console.log(pickElement(numbers, 2)); // 30

/*
--------------------------------------------------------------------------------
📝 学んだこと:
- アロー関数は一行で書ける
--------------------------------------------------------------------------------
*/

/*
================================================================================
問題: 🔥 パワフル文字列！指定文字数だけ繰り返せ！💪
出典: https://jsgym.shiftb.dev/q/VgX8kB2ekH
結果: 正解
================================================================================
*/

// ✅ 自分の解答
// ① 引数となる文字列と繰り返す回数を定義
const inputStr = "Train!";
const repeatCount = 3;

// ② 文字列を指定回数繰り返す関数定義
// ここに関数定義のコードを書いて
const repeatString = (inputStr, repeatCount) => {
  let result = "";
  for (let i = 0; i < repeatCount; i++) {
    result += inputStr
  }
  return result;
}

// ③ 関数の実行と結果の表示
// ここに関数実行と表示のコードを書いて
console.log(repeatString(inputStr, repeatCount));

// 📘 模範解答
// const repeatString = (str, count) => str.repeat(count);
// const inputStr = "Train!";
// const repeatCount = 3;
// console.log(repeatString(inputStr, repeatCount)); // "Train!Train!Train!"

/*
--------------------------------------------------------------------------------
📝 学んだこと:
- For文でも正しい回答を導き出せるがrepeat関数を使うことでもっと簡単に実装できた
- パスワードのマスキング(*)など、繰り返した文字を表示したい場合に使われる
--------------------------------------------------------------------------------
*/

/*
================================================================================
問題: 配列の最後の要素を取得する関数を作成しましょう✨
出典: https://jsgym.shiftb.dev/q/xunnBER_3W
結果: 正解
================================================================================
*/

// ✅ 自分の解答
// ① 引数となる配列の定義
const numbersA = [1, 2, 3, 4, 5];

// ② 配列の最後の要素を取得して返す関数を定義する
// ここに関数のコードを書いてね✨
const getEndItem = (numbers) => numbers[numbers.length - 1];

// ③ 作成した関数を実行し、結果をconsole.logで表示する
// ここに関数実行のコードを書いてね😉
console.log(getEndItem(numbersA));

// 📘 模範解答
// const getLastElement = arr => arr[arr.length - 1];
// const numbers = [1, 2, 3, 4, 5];
// console.log(getLastElement(numbers)); // 5
/*
--------------------------------------------------------------------------------
📝 学んだこと:
- numbers.lengthが返すのは要素の数なので、この場合だと5を返却する
--------------------------------------------------------------------------------
*/

/*
================================================================================
問題: 配列内の数値をすべて掛け合わせて積を求める関数を作ろう！
出典: https://jsgym.shiftb.dev/q/p0gW2-tsle
結果: 正解
================================================================================
*/

// ✅ 自分の解答
// ① 定数の定義
const numbersB = [1, 2, 3, 4];

// ② ここに配列要素の積を計算して返す関数を定義してください
const getNum = (numbers) => {
  let result = 1;
  numbers.forEach((num) => {
    result *= num;
  })
  return result;
}

// ③ 作成した関数を実行し、結果をconsole.logで表示してください
console.log(getNum(numbersB));

// 📘 模範解答
// const multiplyArray = arr => arr.reduce((total, current) => total * current, 1);
// console.log(multiplyArray([1, 2, 3, 4])); // 24

/*
--------------------------------------------------------------------------------
📝 学んだこと:
- この問題では配列の値を一つにまとめることができるreduceを使う
- reduceの第一引数には累計値が設定され、第二引数には現在の値が設定される
- ,1はtotalの初期値を意味している
--------------------------------------------------------------------------------
*/
